{"version":3,"sources":["componentes/CategoriaAdd.js","helper/getGifs.js","componentes/GifGridItem.js","componentes/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategoriaAdd","_ref","AgregarCategoria","_useState","useState","_useState2","Object","slicedToArray","caja","setcaja","react_default","a","createElement","Fragment","onSubmit","e","console","log","preventDefault","trim","length","cats","concat","toConsumableArray","type","value","onChange","target","getGifs","asyncToGenerator","regenerator_default","mark","_callee","categoria","url","respuesta","_yield$respuesta$json","data","gifs","wrap","_context","prev","next","encodeURI","fetch","sent","json","map","img","id","title","images","downsized_medium","abrupt","stop","_x","apply","this","arguments","GifGridItem","className","src","alt","GifGrid","_useFetchGifs","loading","state","setstate","useEffect","then","imgs","useFetchGifs","gif","GifGridItem_GifGridItem","assign","key","GifExpertApp","categorias","setcategorias","CategoriaAdd_CategoriaAdd","GifGrid_GifGrid","ReactDOM","render","src_GifExpertApp","document","getElementById"],"mappings":"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","file":"static/js/main.472500e9.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nexport const CategoriaAdd = ({AgregarCategoria}) => {\n\n\n    const [caja, setcaja] = useState('')\n\n    const handelInpuChange = ( e ) =>{\n        setcaja(e.target.value)\n    }\n\n    const handleSubmit = (e) =>{\n        console.log('form enviado')\n        e.preventDefault();\n        if(caja.trim().length > 2 ){\n            AgregarCategoria( cats => [caja, ...cats ]);\n            setcaja('')\n        }\n    }\n\n\n\n    return (\n        <>\n        <h2>Agregar categoria</h2>   \n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"  \n                value={caja} \n                onChange={handelInpuChange} />\n        </form>\n        </>\n    )\n}\n","/** @format */\n\nexport const getGifs = async (categoria) => {\n\tconst url = `http://api.giphy.com/v1/gifs/search?api_key=caaoPy4odLlSnGVLHNhSXB6kkPf8ow9y&q=${encodeURI(\n\t\tcategoria\n\t)}&limit=10`;\n\n\tconst respuesta = await fetch(url);\n\tconst { data } = await respuesta.json();\n\n\t// console.log(data)\n\tconst gifs = data.map((img) => {\n\t\treturn {\n\t\t\tid: img.id,\n\t\t\ttitle: img.title,\n\t\t\turl: img.images.downsized_medium.url,\n\t\t};\n\t});\n\n\t// console.log(gifs);\n\n\treturn gifs;\n\t//setimges(gifs);\n\n\t//console.log(data)\n\t//console.log(gifs)\n};\n","import React from 'react'\n\nexport const GifGridItem = ({title,url}) => {\n    return (\n        <div className='card  animate__animated animate__fadeIn animate__delay-1s ' >\n            <img  src={url}  alt={title}  />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ categoria }) => {\n\t\n\tconst {data :images ,loading} = useFetchGifs(categoria);\n\t// console.log(data)\n\t// console.log(loading)\n\n\treturn (\n\t\t<>\n\t\t<h3>{categoria}</h3>\n\t\t{ loading && 'Cargando...'  }\n\t\t<div className='card-grid' >\n\t\t\t{images.map((gif) => (\n\t\t\t\t<GifGridItem key={gif.id} {...gif} />\n\t\t\t\t))}\n\t\t</div>\n\t\t</>\n\t);\n};\n","/** @format */\n\nimport { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helper/getGifs\";\n\nexport const useFetchGifs = (categoria) => {\n\tconst [state, setstate] = useState({\n\t\tdata: [],\n\t\tloading: true,\n\t});\n\n\tuseEffect(() => {\n\t\tgetGifs(categoria).then((imgs) => {\n\t\t\tsetstate({\n\t\t\t\tdata: imgs,\n\t\t\t\tloading: false,\n\t\t\t});\n\t\t});\n\t}, [categoria]);\n\n\t// console.log(state)\n\treturn state;\n};\n","import React, { useState } from \"react\";\nimport { CategoriaAdd } from \"./componentes/CategoriaAdd\";\nimport { GifGrid } from \"./componentes/GifGrid\";\n\n\nconst GifExpertApp = () => {\n\tconst [categorias, setcategorias] = useState([\"goku\"]);\n\t\n\tconst HandleAdd = () => {\n\t\tsetcategorias([\"Superman\", ...categorias]);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<h2>Gif Expert App </h2>\n\t\t\t<CategoriaAdd AgregarCategoria={setcategorias} />\n\t\t\t<hr />\n\n\t\t\t{/* <button onClick={HandleAdd}>Otra Categoria</button> */}\n\t\t\t<ol>\n                {\n                    categorias.map((categoria) => (\n                        <GifGrid key={categoria} categoria={categoria} />\n                    ))\n                }\n\t\t\t</ol>\n\t\t</>\n\t);\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import App from './App';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}